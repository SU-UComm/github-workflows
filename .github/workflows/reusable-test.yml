### Test passing data and secrets from caller to reusable workflow

name: Reusable workflow

on:
  workflow_call:
    inputs:
      site:
        type: string
        description: 'site on Pantheon where we will deploy the code'
        required: true
      component_folder:
        type: string
        description: 'directory in the repo on Pantheon that should be replaced with the code being deployed'
        required: true
      message:
        type: string
        description: 'Message for push to Pantheon\nDefaults to last commit message'
        required: false
        default: ''
    secrets:
      DEV_DEPLOY_REPO:
        description: 'ssh url of repo on Pantheon where we will deploy the code'
        required: true
      PANTHEON_MACHINE_TOKEN:
        description: 'Pantheon-generated machine token to allow terminus to set the dev environment to git mode'
        required: true
      SSH_DEPLOY_PRIVATE_KEY:
        description: 'SSH Private Key allowed to deploy to DEV_DEPLOY_REPO'
        required: true
      SLACK_DEPLOY_WEBHOOK:
        description: 'url for posting status updates to desired Slack channel'
        required: true

jobs:
  verify-data:
    runs-on: ubuntu-latest

    env:
      SOURCE_REPO_FOLDER: ./build # where this repo gets checked out
      TARGET_REPO_FOLDER: ./deploy # where Pantheon's repo gets checked out
      DEPLOY_REPO: ${{ secrets.DEV_DEPLOY_REPO }} # the ssh url of Pantheon's repo
      INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_WEBHOOK }} # the url of the Slack channel to post updates to

    steps:
      - name: Echo env
        shell: bash
        run: |
          echo "Env:"
          echo "  SOURCE_REPO_FOLDER: ${{ env.SOURCE_REPO_FOLDER }}"
          echo "  TARGET_REPO_FOLDER: ${{ env.TARGET_REPO_FOLDER }}"
          echo "  DEPLOY_REPO: ${{ env.DEPLOY_REPO }}"
          echo "  INCOMING_WEBHOOK_URL: ${{ env.INCOMING_WEBHOOK_URL }}"

      - name: Echo inputs
        shell: bash
        run: |
          echo "Inputs:"
          echo "  site: ${{ inputs.site }}"
          echo "  component_folder: ${{ inputs.component_folder }}"
          echo "  message: ${{ inputs.message }}"

      - name: Empty secret - DEV_DEPLOY_REPO
        if: ${{ env.DEPLOY_REPO == '' }}
        shell: bash
        run: |
          echo "  Empty DEV_DEPLOY_REPO"
      - name: Non-empty secret - DEV_DEPLOY_REPO
        if: ${{ env.DEPLOY_REPO != '' }}
        shell: bash
        run: |
          echo "  Non-empty DEV_DEPLOY_REPO"

      # - name: Empty secret - PANTHEON_MACHINE_TOKEN
      #   if: secrets.PANTHEON_MACHINE_TOKEN == ''
      #   shell: bash
      #   run: |
      #     echo "  Empty PANTHEON_MACHINE_TOKEN"
      # - name: Non-empty secret - PANTHEON_MACHINE_TOKEN
      #   if: secrets.PANTHEON_MACHINE_TOKEN != ''
      #   shell: bash
      #   run: |
      #     echo "  Non-empty PANTHEON_MACHINE_TOKEN"

      # - name: Empty secret - SSH_DEPLOY_PRIVATE_KEY
      #   if: secrets.SSH_DEPLOY_PRIVATE_KEY == ''
      #   shell: bash
      #   run: |
      #     echo "  Empty SSH_DEPLOY_PRIVATE_KEY"
      # - name: Non-empty secret - SSH_DEPLOY_PRIVATE_KEY
      #   if: secrets.SSH_DEPLOY_PRIVATE_KEY != ''
      #   shell: bash
      #   run: |
      #     echo "  Non-empty SSH_DEPLOY_PRIVATE_KEY"

      # - name: Empty secret - SLACK_DEPLOY_WEBHOOK
      #   if: secrets.SLACK_DEPLOY_WEBHOOK == ''
      #   shell: bash
      #   run: |
      #     echo "  Empty SLACK_DEPLOY_WEBHOOK"
      # - name: Non-empty secret - SLACK_DEPLOY_WEBHOOK
      #   if: secrets.SLACK_DEPLOY_WEBHOOK != ''
      #   shell: bash
      #   run: |
      #     echo "  Non-empty SLACK_DEPLOY_WEBHOOK"
