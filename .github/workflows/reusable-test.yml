### Test passing data and secrets from caller to reusable workflow

name: Reusable workflow

on:
  workflow_call:
    inputs:
      site:
        type: string
        description: 'site.env on Pantheon where we will deploy the code'
        required: true
      component_folder:
        type: string
        description: 'directory in the repo on Pantheon that should be replaced with the code being deployed'
        required: true
      message:
        type: string
        description: 'Message for push to Pantheon\nDefaults to last commit message'
        required: false
        default: ''
    secrets:
      DEV_DEPLOY_REPO:
        description: 'ssh url of repo on Pantheon where we will deploy the code'
        required: true

jobs:
  verify-data:
    runs-on: ubuntu-latest

    env:
      SOURCE_REPO_FOLDER: ./build # where this repo gets checked out
      TARGET_REPO_FOLDER: ./deploy # where Pantheon's repo gets checked out
      DEPLOY_REPO: ${{ secrets.DEV_DEPLOY_REPO }} # the ssh url of Pantheon's repo
      INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_WEBHOOK }} # the url of the Slack channel to post updates to

    steps:
      - name: Echo required info
        shell: bash
        run: |
          echo "Env:"
          echo "  SOURCE_REPO_FOLDER: ${{ env.SOURCE_REPO_FOLDER }}"
          echo "  TARGET_REPO_FOLDER: ${{ env.TARGET_REPO_FOLDER }}"
          echo "  DEPLOY_REPO: ${{ env.DEPLOY_REPO }}"
          echo "  INCOMING_WEBHOOK_URL: ${{ env.INCOMING_WEBHOOK_URL }}"
          echo "Secrets:"
          echo "  DEV_DEPLOY_REPO: ${{ secrets.DEV_DEPLOY_REPO }}"
          echo "  PANTHEON_MACHINE_TOKEN: ${{ secrets.PANTHEON_MACHINE_TOKEN }}"
          echo "  SLACK_DEPLOY_WEBHOOK: ${{ secrets.SLACK_DEPLOY_WEBHOOK }}"
          echo "  SSH_DEPLOY_PRIVATE_KEY: ${{ secrets.SSH_DEPLOY_PRIVATE_KEY }}"
          echo "Inputs:"
          echo "  site: ${{ inputs.site }}"
          echo "  component_folder: ${{ inputs.component_folder }}"

      - name: Echo empty message
        if: ${{ inputs.message == '' }}
        shell: bash
        run: |
          echo "  No message was specified"

      - name: Echo non-empty message
        if: ${{ inputs.message != '' }}
        shell: bash
        run: |
          echo "  message: ${{ inputs.message }}"
